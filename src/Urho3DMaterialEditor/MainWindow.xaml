<Window x:Class="Urho3DMaterialEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Urho3DMaterialEditor"
        xmlns:views="clr-namespace:Toe.Scripting.WPF.Views;assembly=Toe.Scripting.WPF"
        xmlns:wpf="clr-namespace:Urho.Extensions.Wpf;assembly=Urho.Extensions.Wpf"
        xmlns:viewModels="clr-namespace:Urho3DMaterialEditor.ViewModels"
        xmlns:views1="clr-namespace:Urho3DMaterialEditor.Views"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance viewModels:MainViewModel }"
        Height="450" Width="800">
    <Window.Title>
        <Binding Path="FileName" StringFormat="Urho3D Material Editor {0}" />
    </Window.Title>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Menu Grid.Row="0">
            <MenuItem Header="File">
                <MenuItem Header="New Material" Command="{Binding NewCommand}" />
                <MenuItem Header="New Empty Graph" Command="{Binding NewEmptyCommand}" />
                <MenuItem Header="Open" Command="{Binding OpenCommand}" />
                <MenuItem Header="Save" Command="{Binding SaveCommand}" />
                <MenuItem Header="Save As ..." Command="{Binding SaveAsCommand}" />
                <MenuItem Header="Share/Export ..." Command="{Binding ExportCommand}" />
                <Separator />
                <MenuItem Header="Save Selected As ..." Command="{Binding SaveSelectedAsCommand}" />
                <MenuItem Header="Merge With ..." Command="{Binding MergeCommand}" />
                <Separator />
                <MenuItem Header="Set resource path..." Command="{Binding SetResourcePathCommand}" />
                <Separator />
                <MenuItem Header="Exit" Command="{Binding ExitCommand}" />
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Header="Cut" Command="{Binding ScriptViewModel.CutSelectedCommand}" />
                <MenuItem Header="Copy" Command="{Binding ScriptViewModel.CopySelectedCommand}" />
                <MenuItem Header="Paste" Command="{Binding ScriptViewModel.PasteCommand}" />
                <MenuItem Header="Duplicate" Command="{Binding ScriptViewModel.DuplicateSelectedCommand}" />
                <MenuItem Header="Delete" Command="{Binding ScriptViewModel.DeleteSelectedCommand}" />
                <Separator />
                <MenuItem Header="Group Selected" Command="{Binding ScriptViewModel.GroupSelectedCommand}" />
                <MenuItem Header="Ungroup Selected" Command="{Binding ScriptViewModel.UngroupSelectedCommand}" />
            </MenuItem>
            <MenuItem Header="View">
                <MenuItem Header="Centering graph" Command="{Binding CenterGraphCommand}" />
                <MenuItem Header="View Final Graph" Command="{Binding RunScriptAnalizerCommand}" />
                <MenuItem Header="Rearrange" Command="{Binding RearrangeCommand}" />
                <Separator />
                <MenuItem Header="Open Scene">
                    <MenuItem Header="Spot light" Command="{Binding OpenSceneCommand}" CommandParameter="Spot" />
                    <MenuItem Header="Point light" Command="{Binding OpenSceneCommand}" CommandParameter="Point" />
                    <MenuItem Header="Directional light" Command="{Binding OpenSceneCommand}"
                              CommandParameter="Directional" />
                    <MenuItem Header="From file..." Command="{Binding OpenSceneCommand}" />
                </MenuItem>
                <MenuItem Header="Get static model from file..." Command="{Binding OpenMDLCommand}" />
                <MenuItem Header="Get animated model from file..." Command="{Binding OpenAnimatedMDLCommand}" />
                <Separator />
                <MenuItem Header="Shadow Quality">
                    <MenuItem Header="SimpleN16Bit" Command="{Binding SetShadowQualityCommand}"
                              CommandParameter="SimpleN16Bit" />
                    <MenuItem Header="SimpleN24Bit" Command="{Binding SetShadowQualityCommand}"
                              CommandParameter="SimpleN24Bit" />
                    <MenuItem Header="PcfN16Bit" Command="{Binding SetShadowQualityCommand}"
                              CommandParameter="PcfN16Bit" />
                    <MenuItem Header="PcfN24Bit" Command="{Binding SetShadowQualityCommand}"
                              CommandParameter="PcfN24Bit" />
                    <MenuItem Header="Vsm" Command="{Binding SetShadowQualityCommand}" CommandParameter="Vsm" />
                    <MenuItem Header="BlurVsm" Command="{Binding SetShadowQualityCommand}" CommandParameter="BlurVsm" />
                </MenuItem>
                <MenuItem Header="Render Path">
                    <MenuItem Header="Deferred" Command="{Binding SetRenderPathCommand}" CommandParameter="Deferred" />
                    <MenuItem Header="DeferredHWDepth" Command="{Binding SetRenderPathCommand}"
                              CommandParameter="DeferredHWDepth" />
                    <MenuItem Header="Forward" Command="{Binding SetRenderPathCommand}" CommandParameter="Forward" />
                    <MenuItem Header="ForwardDepth" Command="{Binding SetRenderPathCommand}"
                              CommandParameter="ForwardDepth" />
                    <MenuItem Header="ForwardHWDepth" Command="{Binding SetRenderPathCommand}"
                              CommandParameter="ForwardHWDepth" />
                    <MenuItem Header="PBRDeferred" Command="{Binding SetRenderPathCommand}"
                              CommandParameter="PBRDeferred" />
                    <MenuItem Header="PBRDeferredHWDepth" Command="{Binding SetRenderPathCommand}"
                              CommandParameter="PBRDeferredHWDepth" />
                    <MenuItem Header="Prepass" Command="{Binding SetRenderPathCommand}" CommandParameter="Prepass" />
                    <MenuItem Header="PrepassHDR" Command="{Binding SetRenderPathCommand}"
                              CommandParameter="PrepassHDR" />
                    <MenuItem Header="PrepassHWDepth" Command="{Binding SetRenderPathCommand}"
                              CommandParameter="PrepassHWDepth" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="For Developers" x:Name="_forDev">
                <MenuItem Header="Test All Nodes" Command="{Binding TestNodesCommand}" />
                <MenuItem Header="Run Performance Test" Command="{Binding TestPerformanceCommand}" />
            </MenuItem>
        </Menu>
        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <Button MinWidth="24" MinHeight="24" Margin="2" Command="{Binding ScriptViewModel.UndoCommand}">&#x21BA;</Button>
            <Button MinWidth="24" MinHeight="24" Margin="2" Command="{Binding ScriptViewModel.RedoCommand}">&#x21BB;</Button>
            <ToggleButton MinWidth="24" MinHeight="24" Margin="2" Content="txt" IsChecked="False" Click="ToggleButton_Click"/>
        </StackPanel>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="0" Name="rowMn" SizeChanged="rowMn_SizeChanged">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="0"  Name="rowSh"/>
                </Grid.RowDefinitions>
                <views:ScriptView DataContext="{Binding ScriptViewModel}" Grid.Row="0">
                    <views:ScriptView.Resources>
                        <DataTemplate DataType="{x:Type viewModels:EnumViewModel}">
                            <views1:EnumNodeView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:Vector4ViewModel}">
                            <views1:Vector4NodeView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:Vector3ViewModel}">
                            <views1:Vector3NodeView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:Vector2ViewModel}">
                            <views1:Vector2NodeView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:Mat4ViewModel}">
                            <views1:Mat4NodeView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:Mat3ViewModel}">
                            <views1:Mat3NodeView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:Mat2ViewModel}">
                            <views1:Mat2NodeView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:ScalarViewModel}">
                            <views1:ScalarNodeView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:IntViewModel}">
                            <views1:IntNodeView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:IfDefViewModel}">
                            <views1:StringNodeView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:StringViewModel}">
                            <views1:StringNodeView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:SamplerViewModel}">
                            <views1:SamplerNodeView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:SamplerCubeViewModel}">
                            <views1:SamplerNodeView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:SpecularViewModel}">
                            <views1:SpecularNodeView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:ColorViewModel}">
                            <views1:ColorNodeView />
                        </DataTemplate>
                    </views:ScriptView.Resources>
                </views:ScriptView>
                <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                <Grid Grid.Row="2" >
                    <TextBox Text="{Binding GLSLSource}" Background="Black" Foreground="Wheat" FontSize="13" TextWrapping="NoWrap" AcceptsReturn="True" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Auto"/>
                </Grid>

            </Grid>
            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Distance = "  VerticalAlignment="Center"/>
                    <TextBox BorderThickness="0" IsReadOnly="True"  VerticalAlignment="Center">
                    <TextBox.Text>
                        <Binding Path="CameraDistance" StringFormat="0.000" />
                    </TextBox.Text>
                </TextBox>
                    <Button Content="Create LOD" IsEnabled="False" Command="{Binding CreateLodCommand}" VerticalAlignment="Center"/>
                </StackPanel>
                <wpf:UrhoSurface  Grid.Row="1" x:Name="_urhoSurfaceCtrl" />
                <ComboBox Grid.Row="2" ItemsSource="{Binding Nodes}" SelectedItem="{Binding SelectedNode}" />
            </Grid>
        </Grid>
        <Grid Grid.Row="3">
            <TextBlock x:Name="Status" />
        </Grid>
    </Grid>
</Window>